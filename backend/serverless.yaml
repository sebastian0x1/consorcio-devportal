service: cs-portal
frameworkVersion: '2'

custom:
  jest:
    collectCoverage: true
    testRegex: /__tests__/.*.(spec|test).(js|ts|ts|mjs)?$
  webpack:
    includeModules: true
  stage: ${env:STAGE}
  VPC_CIDR: 10
  deploymentBucket:
    blockPublicAccess: true
    tags:
      - Key: CC
        Value: 9301
      - Key: Proyecto
        Value: Dev Portal
      - Key: ambiente
        Value: ci-cd
      - Key: idAplicativo
        Value: Dev Portal
      - Key: responsable
        Value: ingenieria
      - Key: horarioEncendido
        Value: !Ref horario
      - Key: backup
        Value: bronze

plugins:
  - serverless-offline
  - serverless-offline-dotenv
  - serverless-dotenv-plugin
  - serverless-deployment-bucket
  - serverless-step-functions
  - serverless-plugin-include-dependencies

package:
  excludeDevDependencies: false
  patterns:
    - '!node_modules/**'
  individually: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${env:STAGE}
  region: ${env:REGION}
  versionFunctions: false # Optional function versioning
  logRetentionInDays: 3
  deploymentBucket:
    versioning: false
    name: ${self:service}-deployments-${self:provider.stage}-${self:provider.region} # Deployment bucket name. Default is generated by the framework
    maxPreviousDeploymentArtifacts: 1 # On every deployment the framework prunes the bucket to remove artifacts older than this limit. The default is 5
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'apigateway:GET'
        - 'apigateway:POST'
      Resource:
        - 'arn:aws:apigateway:${self:provider.region}::*'
    - Effect: 'Allow'
      Action:
        - 'cognito-idp:AdminUpdateUserAttributes'
        - 'cognito-idp:AdminDeleteUser'
        - 'cognito-idp:ListUsers'
        - 'cognito-idp:UpdateIdentityProvider'
        - 'cognito-idp:UpdateUserPoolClient'
        - 'cognito-idp:AdminGetUser'
      Resource:
        - !Join ['', ['arn:aws:cognito-idp:${self:provider.region}:${env:AWS_ACCOUNT_ID}:userpool/', '${env:USERPOOLID}']]
    - Effect: 'Allow'
      Action:
        - 's3:*'
      Resource:
        - 'arn:aws:s3:::${self:service}-stack-${self:provider.region}-${self:provider.stage}/'
        - 'arn:aws:s3:::${self:service}-stack-${self:provider.region}-${self:provider.stage}/*'
        - 'arn:aws:s3:::${self:service}-cognito-cloudtrail-${self:provider.stage}-${self:provider.region}/'
        - 'arn:aws:s3:::${self:service}-cognito-cloudtrail-${self:provider.stage}-${self:provider.region}/*'
    - Effect: 'Allow'
      Action:
        - states:*
      Resource:
        - arn:aws:states:${self:provider.region}:${env:AWS_ACCOUNT_ID}:stateMachine:ApiChanges-${self:provider.stage}
    - Effect: 'Allow'
      Action:
        - sqs:*
      Resource:
        - Fn::GetAtt: [DeploymentNotificationQueue, Arn]
    - Effect: 'Allow'
      Action:
        - sqs:*
      Resource:
        - Fn::GetAtt: [EventBusNotificationQueue, Arn]
    # - Effect: 'Allow'
    #   Action:
    #     - 'organizations:ListTagsForResource'
    #   Resource:
    #     - '*'
    #     - arn:aws:organizations::588639325838:ou/o-474t7zw6qs/ou-va83-ne3j1omn
    # - Effect: 'Allow'
    #   Action:
    #     - 'organizations:ListAccounts'
    #   Resource:
    #     - '*'
    #     - arn:aws:organizations::588639325838:ou/o-474t7zw6qs/ou-va83-ne3j1omn
    # - Effect: 'Allow'
    #   Action:
    #     - 'organizations:Describe*'
    #     - 'organizations:List*'
    #   Resource:
    #     - '*'
    - Effect: 'Allow'
      Action:
        - 'organizations:ListAccounts'
        - 'organizations:ListAccountsForParent'
        - 'organizations:ListTagsForResource'
        - 'organizations:ListOrganizationalUnitsForParent'
      Resource:
        #- 'arn:aws:organizations::*:ou/o-*/ou-*'
        #- 'arn:aws:organizations::*'
        #- arn:aws:organizations::588639325838:ou/o-474t7zw6qs/ou-va83-ne3j1omn
        - '*'
    - Effect: 'Allow'
      Action:
        - 'sts:AssumeRole'
      Resource:
        - arn:aws:iam::839093138397:role/role_to_be_assume # integracionesServiciosDev
        - arn:aws:iam::115428099475:role/role_to_be_assume # integracionesSeviciosTest
        - arn:aws:iam::723589903925:role/role_to_be_assume # integracionesServiciosProd
        - arn:aws:iam::371428146907:role/role_to_be_assume # financierosInversionesDev
        - arn:aws:iam::655295353951:role/role_to_be_assume # financierosInversionesTest
        - arn:aws:iam::839609294763:role/role_to_be_assume # financierosInversionesProd
        - arn:aws:iam::250412402401:role/role_to_be_assume # ci-cd
        - arn:aws:iam::121117846942:role/role_to_be_assume # productosProcesosDev
        - arn:aws:iam::557381136923:role/role_to_be_assume # productosProcesosTest
        - arn:aws:iam::344060186652:role/role_to_be_assume # productosProcesosProd
        - arn:aws:iam::938057256881:role/role_to_be_assume # inbound
        #- !Sub arn:aws:iam::{{resolve:ssm:AccountIDS}}:role/role_to_be_assume # TODO: buscar la manera de automatizar esto
    - Effect: 'Allow'
      Action:
        - 'kms:Decrypt'
        - 'kms:Encrypt'
        - 'kms:GenerateDataKey'
        - 'kms:DescribeKey'
        - 'kms:CreateGrant'
        - 'kms:ReEncrypt'
      Resource:
        - ${env:S3_KEY_ARN}
        - ${env:DB_ARN_SECRET}
        - ${env:DB_ARN_KMS}
    - Effect: 'Allow'
      Action:
        - 'secretsmanager:GetSecretValue'
      Resource:
        - ${env:DB_ARN_SECRET}
    - Effect: 'Allow'
      Action:
        - 'kms:ListKeys'
        - 'kms:ListAliases'
      Resource:
        - '*'
  vpc:
    securityGroupIds:
      - ${env:SG}
    subnetIds:
      - ${env:PRIVATESUBNET1}
      - ${env:PRIVATESUBNET2}
      - ${env:PRIVATESUBNET3}
  stackTags:
    CC: 9301
    Proyecto: Dev Portal
    ambiente: ci-cd
    idAplicativo: Dev Portal
    responsable: ingenieria

functions:
  - ${file(apis/apis.yaml)}
  - ${file(apiManager/apiManager.yaml)}
  - ${file(auth/auth.yaml)}
  - ${file(business-lines/business-lines.yaml)}
  - ${file(roles/roles.yaml)}
  - ${file(stages/stages.yaml)}
  - ${file(users/users.yaml)}
  - ${file(realms/realms.yaml)}
  - ${file(cf-header/cf-header.yaml)}
  - ${file(fileConverter/fileConverter.yaml)}
  - ${file(database/createTables.yaml)}
  - deployment-notification:
      handler: utils/deploymentNotification.handler
      events:
        - sqs:
            arn:
              Fn::GetAtt:
                - DeploymentNotificationQueue
                - Arn

stepFunctions: ${file(apiManager/apiChangesSF.yaml)}

resources:
  - ${file(resources/config-rules.yaml)}
  - ${file(resources/eventBridge.yaml)}
  - ${file(resources/deploy-notifications.yaml)}
  #- ${file(resources/apigateway.yaml)}
  #- ${file(resources/authorizer.yaml)}

  - Conditions:
      DeliveryChannelNotExists: !Equals
        - ${env:DELIVERY_CHANNEL_EXISTS}
        - 'false'
      ConfigRecorderNotExists: !Equals
        - ${env:CONFIG_RECORDER_EXISTS}
        - 'false'
